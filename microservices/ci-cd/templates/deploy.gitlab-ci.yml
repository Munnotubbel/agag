
.deploy:
  image: bitnami/kubectl:latest
  script:
    - kubectl config get-contexts
    - kubectl cluster-info
    - cd $CI_PROJECT_DIR/k8s/cluster/${CI_ENVIRONMENT_NAME}
    - sed -i "s/IMAGE_TAG/\"$DATE_TAG\"/g" kustomization.yml
    - cat kustomization.yml
    - kubectl apply -k . -n ${KUBERNETES_NAMESPACE}
  dependencies:
    - build


# .build:
#   stage: build
#   image: bitnami/kubectl:latest
#   script:
#     - export TIMESTAMP=$(date +%Y%m%d%H%M%S)
#     - echo $TIMESTAMP > build_timestamp.txt
#     - echo "$KUBECONFIG" > kubeconfig.yaml
#     - export KUBECONFIG="$PWD/kubeconfig.yaml"
#     - chmod 600 kubeconfig.yaml
#     - kubectl config view --raw
#     - kubectl config get-contexts
#     - kubectl get pods -n gitlab
#     - kubectl get pods -n gitlab
#     - kubectl get nodes
#     - kubectl cluster-info

#   rules:
#     - if: $CI_COMMIT_BRANCH
#     - if: $CI_PIPELINE_SOURCE == "web"


.deploy_dev:
  extends: .deploy
  variables:
    KUBERNETES_NAMESPACE: ${KUBERNETES_NAMESPACE_DEV}
    KUBE_CONTEXT: agent
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  environment:
    name: dev

.deploy_stg:
  extends: .deploy
  variables:
    KUBERNETES_NAMESPACE: ${KUBERNETES_NAMESPACE_STG}
    KUBE_CONTEXT: agent
  rules:
    - if: $CI_COMMIT_BRANCH == "stg"
      when: manual
  environment:
    name: stg

.deploy_prod:
  extends: .deploy
  variables:
    KUBERNETES_NAMESPACE: ${KUBERNETES_NAMESPACE_PROD}
    KUBE_CONTEXT: agent
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  environment:
    name: prod